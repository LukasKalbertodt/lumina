  // vectorTest();
  // matrixTest();

  // cout << +static_cast<uint8_t>(300.f) << endl;

  // Color8 c1(255, 255, 0);
  // cout << c1 << endl;
  // cout << createColorHexCode(c1) << endl;
  // cout << makeColor<Color8>(0.5f, 0.2f, 1.f) << endl;
  // cout << colorToVec(makeColor<Color8>(0.5f, 0.2f, 1.f)) << endl;
  // cout << colorToVec3f(c1) << endl;





  // LVector<float, 3> v1(1,2,3);
  // LVector<float, 3> v2(6.1f,7.2f,8.3f);
  // v1 += v2;
  // cout << v1 << endl;
  // cout << v2 << endl;
  // cout << v1.x << "," << v1.z << endl;

  // cout << LVector<float, 5>(11, 12, 13, 44, 109) << endl;
  // cout << LVector<float, 2>(0.f, 1.5f) + LVector<int, 2>(0, 1) << endl;

  // cout << "cast to int: " << vector_cast<int>(v2) << endl;
  // cout << "cast to 2d:  " << vector_cast<2>(v2) << endl;
  // cout << "cast to 4di: " << vector_cast<int, 4>(v2) << endl;

  

  // LWindow win2("DoppelgÃ¤nger!");
  // // win2.open();
  // // auto con = win.getRenderContext(LDriverType::OpenGL);

  // // LDriverFactory f(LDriverType::OpenGL);
  // // auto s = f.make<LShader>();
  // // s->compile();

  // while(run && (win.isValid() || win2.isValid())) {
  //   win.update();
  //   win2.update();
  // }